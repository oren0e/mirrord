window.SIDEBAR_ITEMS = {"enum":[["ContainerStateStatusEnum",""],["EndpointPortConfigProtocolEnum",""],["EndpointPortConfigPublishModeEnum",""],["EndpointSpecModeEnum",""],["EventMessageScopeEnum",""],["EventMessageTypeEnum",""],["HealthStatusEnum",""],["HostConfigCgroupnsModeEnum",""],["HostConfigIsolationEnum",""],["LocalNodeState","Current local status of this node. Enumeration of values. Since this enum’s variants do not hold data, we can easily define them them as `#[repr(C)]` which helps with FFI."],["MountBindOptionsPropagationEnum",""],["MountPointTypeEnum",""],["MountTypeEnum",""],["NodeSpecAvailabilityEnum",""],["NodeSpecRoleEnum",""],["NodeState","NodeState represents the state of a node. Enumeration of values. Since this enum’s variants do not hold data, we can easily define them them as `#[repr(C)]` which helps with FFI."],["PluginConfigInterfaceProtocolSchemeEnum",""],["PortTypeEnum",""],["Reachability","Reachability represents the reachability of a node. Enumeration of values. Since this enum’s variants do not hold data, we can easily define them them as `#[repr(C)]` which helps with FFI."],["RestartPolicyNameEnum",""],["ServiceSpecRollbackConfigFailureActionEnum",""],["ServiceSpecRollbackConfigOrderEnum",""],["ServiceSpecUpdateConfigFailureActionEnum",""],["ServiceSpecUpdateConfigOrderEnum",""],["ServiceUpdateStatusStateEnum",""],["SwarmSpecCaConfigExternalCAsProtocolEnum",""],["SystemInfoCgroupDriverEnum",""],["SystemInfoCgroupVersionEnum",""],["SystemInfoIsolationEnum",""],["TaskSpecContainerSpecIsolationEnum",""],["TaskSpecRestartPolicyConditionEnum",""],["TaskState","Enumeration of values. Since this enum’s variants do not hold data, we can easily define them them as `#[repr(C)]` which helps with FFI."],["VolumeScopeEnum",""]],"struct":[["Address","Address represents an IPv4 or IPv6 IP address."],["AuthConfig",""],["BuildCache",""],["BuildInfo",""],["BuildPruneResponse",""],["ClusterInfo","ClusterInfo represents information about the swarm as is returned by the \"/info\" endpoint. Join-tokens are not included. "],["Commit","Commit holds the Git-commit (SHA1) that a binary was built from, as reported in the version-string of external tools, such as `containerd`, or `runC`. "],["Config",""],["ConfigSpec",""],["ContainerChangeResponseItem","change item in response to ContainerChanges operation"],["ContainerConfig","Configuration for a container that is portable between hosts.  When used as `ContainerConfig` field in an image, `ContainerConfig` is an optional field containing the configuration of the container that was last committed when creating the image.  Previous versions of Docker builder used this field to store build cache, and it is not in active use anymore. "],["ContainerCreateResponse","OK response to ContainerCreate operation"],["ContainerInspectResponse",""],["ContainerPruneResponse",""],["ContainerState","ContainerState stores container’s running state. It’s part of ContainerJSONBase and will be returned by the \"inspect\" command. "],["ContainerSummary",""],["ContainerSummaryHostConfig",""],["ContainerSummaryNetworkSettings","A summary of the container’s network settings"],["ContainerTopResponse","OK response to ContainerTop operation"],["ContainerUpdateResponse","OK response to ContainerUpdate operation"],["ContainerWaitExitError","container waiting error, if any"],["ContainerWaitResponse","OK response to ContainerWait operation"],["CreateImageInfo",""],["DeviceMapping","A device mapping between the host and container"],["DeviceRequest","A request for devices to be sent to device drivers"],["DistributionInspect","Describes the result obtained from contacting the registry to retrieve image metadata. "],["Driver","Driver represents a driver (network, logging, secrets)."],["EndpointIpamConfig","EndpointIPAMConfig represents an endpoint’s IPAM configuration. "],["EndpointPortConfig",""],["EndpointSettings","Configuration for a network endpoint."],["EndpointSpec","Properties that can be configured to access and load balance a service."],["EngineDescription","EngineDescription provides information about an engine."],["EngineDescriptionPlugins",""],["ErrorDetail",""],["ErrorResponse","Represents an error."],["EventActor","Actor describes something that generates events, like a container, network, or a volume. "],["EventMessage","EventMessage represents the information an event contains. "],["ExecConfig",""],["ExecInspectResponse",""],["ExecStartConfig",""],["GenericResourcesInner",""],["GenericResourcesInnerDiscreteResourceSpec",""],["GenericResourcesInnerNamedResourceSpec",""],["GraphDriverData","Information about the storage driver used to store the container’s and image’s filesystem. "],["Health","Health stores information about the container’s healthcheck results. "],["HealthConfig","A test to perform to check that the container is healthy."],["HealthcheckResult","HealthcheckResult stores information about a single run of a healthcheck probe "],["HistoryResponseItem","individual image layer information in response to ImageHistory operation"],["HostConfig","Container configuration that depends on the host we are running on"],["HostConfigLogConfig","The logging configuration for this container"],["IdResponse","Response to an API call that returns just an Id"],["ImageDeleteResponseItem",""],["ImageId","Image ID or Digest"],["ImageInspect","Information about an image in the local image cache. "],["ImageInspectMetadata","Additional metadata of the image in the local cache. This information is local to the daemon, and not part of the image itself. "],["ImageInspectRootFs","Information about the image’s RootFS, including the layer IDs. "],["ImagePruneResponse",""],["ImageSearchResponseItem",""],["ImageSummary",""],["IndexInfo","IndexInfo contains information about a registry."],["Ipam",""],["IpamConfig",""],["JoinTokens","JoinTokens contains the tokens workers and managers need to join the swarm. "],["Limit","An object describing a limit on resources which can be requested by a task. "],["ManagerStatus","ManagerStatus represents the status of a manager.  It provides the current status of a node’s manager component, if the node is a manager. "],["Mount",""],["MountBindOptions","Optional configuration for the `bind` type."],["MountPoint","MountPoint represents a mount point configuration inside the container. This is used for reporting the mountpoints in use by a container. "],["MountTmpfsOptions","Optional configuration for the `tmpfs` type."],["MountVolumeOptions","Optional configuration for the `volume` type."],["MountVolumeOptionsDriverConfig","Map of driver specific options"],["Network",""],["NetworkAttachmentConfig","Specifies how a service should be attached to a particular network. "],["NetworkConnectRequest",""],["NetworkContainer",""],["NetworkCreateRequest",""],["NetworkCreateResponse",""],["NetworkDisconnectRequest",""],["NetworkPruneResponse",""],["NetworkSettings","NetworkSettings exposes the network settings in the API"],["NetworkingConfig","NetworkingConfig represents the container’s networking configuration for each of its interfaces. It is used for the networking configs specified in the `docker create` and `docker network connect` commands. "],["Node",""],["NodeDescription","NodeDescription encapsulates the properties of the Node as reported by the agent. "],["NodeSpec",""],["NodeStatus","NodeStatus represents the status of a node.  It provides the current status of the node, as seen by the manager. "],["ObjectVersion","The version number of the object such as node, service, etc. This is needed to avoid conflicting writes. The client must send the version number along with the modified specification when updating these objects.  This approach ensures safe concurrency and determinism in that the change on the object may not be applied if the version number has changed from the last read. In other words, if two update requests specify the same base version, only one of the requests can succeed. As a result, two separate update requests that happen at the same time will not unintentionally overwrite each other. "],["OciDescriptor","A descriptor struct containing digest, media type, and size, as defined in the OCI Content Descriptors Specification. "],["OciPlatform","Describes the platform which the image in the manifest runs on, as defined in the OCI Image Index Specification. "],["PeerNode","Represents a peer-node in the swarm"],["Platform","Platform represents the platform (Arch/OS). "],["Plugin","A plugin for the Engine API"],["PluginConfig","The config of a plugin."],["PluginConfigArgs",""],["PluginConfigInterface","The interface between Docker and the plugin"],["PluginConfigLinux",""],["PluginConfigNetwork",""],["PluginConfigRootfs",""],["PluginConfigUser",""],["PluginDevice",""],["PluginEnv",""],["PluginInterfaceType",""],["PluginMount",""],["PluginPrivilege","Describes a permission the user has to accept upon installing the plugin. "],["PluginSettings","Settings that can be modified by users."],["PluginsInfo","Available plugins per type.    > Note: Only unmanaged (V1) plugins are included in this list. > V1 plugins are \"lazily\" loaded, and are not returned in this list > if there is no resource using the plugin. "],["Port","An open port on a container"],["PortBinding","PortBinding represents a binding between a host IP address and a host port. "],["ProcessConfig",""],["ProgressDetail",""],["PushImageInfo",""],["RegistryServiceConfig","RegistryServiceConfig stores daemon registry services configuration. "],["ResourceObject","An object describing the resources which can be advertised by a node and requested by a task. "],["Resources","A container’s resources (cgroups config, ulimits, etc)"],["ResourcesBlkioWeightDevice",""],["ResourcesUlimits",""],["RestartPolicy","The behavior to apply when the container exits. The default is not to restart.  An ever increasing delay (double the previous delay, starting at 100ms) is added before each restart to prevent flooding the server. "],["Runtime","Runtime describes an OCI compliant runtime.  The runtime is invoked by the daemon via the `containerd` daemon. OCI runtimes act as an interface to the Linux kernel namespaces, cgroups, and SELinux. "],["Secret",""],["SecretSpec",""],["Service",""],["ServiceCreateResponse",""],["ServiceEndpoint",""],["ServiceEndpointVirtualIPs",""],["ServiceJobStatus","The status of the service when it is in one of ReplicatedJob or GlobalJob modes. Absent on Replicated and Global mode services. The JobIteration is an ObjectVersion, but unlike the Service’s version, does not need to be sent with an update request. "],["ServiceServiceStatus","The status of the service’s tasks. Provided only when requested as part of a ServiceList operation. "],["ServiceSpec","User modifiable configuration for a service."],["ServiceSpecMode","Scheduling mode for the service."],["ServiceSpecModeReplicated",""],["ServiceSpecModeReplicatedJob","The mode used for services with a finite number of tasks that run to a completed state. "],["ServiceSpecRollbackConfig","Specification for the rollback strategy of the service."],["ServiceSpecUpdateConfig","Specification for the update strategy of the service."],["ServiceUpdateResponse",""],["ServiceUpdateStatus","The status of a service update."],["Swarm",""],["SwarmInfo","Represents generic information about swarm. "],["SwarmInitRequest",""],["SwarmJoinRequest",""],["SwarmSpec","User modifiable swarm configuration."],["SwarmSpecCaConfig","CA configuration."],["SwarmSpecCaConfigExternalCAs",""],["SwarmSpecDispatcher","Dispatcher configuration."],["SwarmSpecEncryptionConfig","Parameters related to encryption-at-rest."],["SwarmSpecOrchestration","Orchestration configuration."],["SwarmSpecRaft","Raft configuration."],["SwarmSpecTaskDefaults","Defaults for creating tasks in this cluster."],["SwarmSpecTaskDefaultsLogDriver","The log driver to use for tasks created in the orchestrator if unspecified by a service.  Updating this value only affects new tasks. Existing tasks continue to use their previously configured log driver until recreated. "],["SwarmUnlockRequest",""],["SystemAuthResponse",""],["SystemDataUsageResponse",""],["SystemInfo",""],["SystemInfoDefaultAddressPools",""],["SystemVersion","Response of Engine API: GET \"/version\" "],["SystemVersionComponents",""],["SystemVersionPlatform",""],["Task",""],["TaskSpec","User modifiable task configuration."],["TaskSpecContainerSpec","Container spec for the service.    > Note: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. "],["TaskSpecContainerSpecConfigs",""],["TaskSpecContainerSpecDnsConfig","Specification for DNS related configurations in resolver configuration file (`resolv.conf`). "],["TaskSpecContainerSpecFile","File represents a specific target that is backed by a file. "],["TaskSpecContainerSpecFile1","File represents a specific target that is backed by a file.    > Note: `Configs.File` and `Configs.Runtime` are mutually exclusive "],["TaskSpecContainerSpecPrivileges","Security options for the container"],["TaskSpecContainerSpecPrivilegesCredentialSpec","CredentialSpec for managed service account (Windows only)"],["TaskSpecContainerSpecPrivilegesSeLinuxContext","SELinux labels of the container"],["TaskSpecContainerSpecSecrets",""],["TaskSpecLogDriver","Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified. "],["TaskSpecNetworkAttachmentSpec","Read-only spec type for non-swarm containers attached to swarm overlay networks.    > Note: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. "],["TaskSpecPlacement",""],["TaskSpecPlacementPreferences",""],["TaskSpecPlacementSpread",""],["TaskSpecPluginSpec","Plugin spec for the service.  (Experimental release only.)    > Note: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. "],["TaskSpecResources","Resource requirements which apply to each individual container created as part of the service. "],["TaskSpecRestartPolicy","Specification for the restart policy which applies to containers created as part of this service. "],["TaskStatus",""],["TaskStatusContainerStatus",""],["ThrottleDevice",""],["TlsInfo","Information about the issuer of leaf TLS certificates and the trusted root CA certificate. "],["UnlockKeyResponse",""],["Volume",""],["VolumeCreateOptions","Volume configuration"],["VolumeListResponse","Volume list response"],["VolumePruneResponse",""],["VolumeUsageData","Usage details about the volume. This information is used by the `GET /system/df` endpoint, and omitted in other endpoints. "]],"type":[["BollardDate",""],["GenericResources","User-defined resources can be either Integer resources (e.g, `SSD=3`) or String resources (e.g, `GPU=UUID1`). "],["PortMap","PortMap describes the mapping of container ports to host ports, using the container’s port-number and protocol as key in the format `<port>/<protocol>`, for example, `80/udp`.  If a container’s port is mapped for multiple protocols, separate entries are added to the mapping table. "]]};